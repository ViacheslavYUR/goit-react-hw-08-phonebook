{"version":3,"file":"static/js/161.e4dca688.chunk.js","mappings":"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","sources":["modules/MyContacts/MyContactsForm/initialState.js","webpack://react-homework-template/./src/modules/MyContacts/MyContactsForm/myContactsForm.module.css?0c7a","redux/contacts/contacts-selectors.js","modules/MyContacts/MyContactsForm/MyContactsForm.jsx","webpack://react-homework-template/./src/modules/MyContacts/MyContactList/ContactItem/contactItem.module.css?10c4","modules/MyContacts/MyContactList/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/modules/MyContacts/MyContactList/myContactList.module.css?4c03","modules/MyContacts/MyContactList/MyContactList.jsx","redux/filter/filter-selectors.js","webpack://react-homework-template/./src/modules/MyContacts/MyContactsFilter/myContactsFilter.module.css?5116","modules/MyContacts/MyContactsFilter/MyContactsFilter.jsx","shared/components/Loader/Loader.styled.js","shared/components/Loader/Loader.jsx","modules/MyContacts/MyContacts.jsx","pages/MyContactsPage/MyContactsPage.jsx"],"sourcesContent":["const initialState = {\n  name: '',\n  number: '',\n};\n\nexport default initialState;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"myContactsForm_form__7K569\",\"label\":\"myContactsForm_label__FuV+b\",\"input\":\"myContactsForm_input__QfV3z\",\"button\":\"myContactsForm_button__CST9o\"};","export const getAllContacts = ({ contacts }) => contacts.items;\n\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\nexport const getLoadingStatus = ({ contacts }) => {\n  return contacts.loading;\n};\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport React, { useState } from 'react';\n\nimport initialState from './initialState';\n\nimport css from './myContactsForm.module.css';\n\nimport { getAllContacts } from 'redux/contacts/contacts-selectors';\n\nimport { addContact } from 'redux/contacts/contacts-operations';\n\nconst MyContactsForm = () => {\n  const [state, setState] = useState({ ...initialState });\n  const allContacts = useSelector(getAllContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    const newValue = value;\n    setState(prevState => {\n      return { ...prevState, [name]: newValue };\n    });\n  };\n\n  const handleAddContact = ({ name, number }) => {\n    const normalaizedName = name.toLowerCase();\n\n    if (\n      allContacts.find(\n        contact => contact.name.toLowerCase() === normalaizedName\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n      return false;\n    }\n\n    dispatch(addContact({ name, number }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleAddContact({ ...state });\n    setState({ ...initialState });\n  };\n\n  const { name, number } = state;\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <label className={css.label} htmlFor=\"name\">\n        <span>Name</span>\n        <input\n          className={css.input}\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter name\"\n        />\n      </label>\n      <label className={css.label} htmlFor=\"name\">\n        <span>Phonenumber </span>\n        <input\n          className={css.input}\n          value={number}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter Phonenumber\"\n        />\n      </label>\n      <button type=\"submit\" className={css.button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\nexport default MyContactsForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"contactItem_item__VUf3q\",\"name\":\"contactItem_name__KstQc\",\"number\":\"contactItem_number__5f4gx\",\"deleteBtn\":\"contactItem_deleteBtn__JT2zm\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contacts-operations';\n\nimport css from './contactItem.module.css';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <li className={css.item}>\n      <p className={css.name}>{name} :</p>\n      <p className={css.number}>{number}</p>\n      <button\n        type=\"button\"\n        className={css.deleteBtn}\n        onClick={() => handleDeleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"myContactList_list__n9HoE\"};","import { useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\n\nimport ContactItem from './ContactItem/ContactItem';\nimport css from './myContactList.module.css';\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\n\nconst MyContactList = () => {\n  const filteredContacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const isContacts = Boolean(filteredContacts.length);\n\n  return (\n    <div>\n      {isContacts && (\n        <ul className={css.list}>\n          {filteredContacts.map(({ id, name, number }) => (\n            <ContactItem key={id} id={id} name={name} number={number} />\n          ))}\n        </ul>\n      )}\n      {!isContacts && <p>No contacts in list, yet</p>}\n    </div>\n  );\n};\n\nexport default MyContactList;\n","export const getFilter = ({ filter }) => filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"myContactsFilter_wrapper__ApCxS\",\"label\":\"myContactsFilter_label__IiMGa\",\"input\":\"myContactsFilter_input__MhssO\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport css from './myContactsFilter.module.css';\n\nconst MyContactsFilter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <label className={css.label} htmlFor=\"filter\">\n        Find contacts by name\n      </label>\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilter}\n      />\n    </div>\n  );\n};\n\nexport default MyContactsFilter;\n","import styled from 'styled-components';\n\nexport const LoadingWrap = styled.div`\n  display: flex;\n  justify-content: center;\n`;","import React from 'react';\n\nimport { Dna } from 'react-loader-spinner';\nimport { LoadingWrap } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <LoadingWrap>\n      <Dna\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"dna-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"dna-wrapper\"\n      />\n    </LoadingWrap>\n  );\n};\nexport default Loader;\n","import MyContactsForm from './MyContactsForm/MyContactsForm';\nimport MyContactList from './MyContactList/MyContactList';\nimport MyContactsFilter from './MyContactsFilter/MyContactsFilter';\nimport { useSelector } from 'react-redux';\nimport Loader from 'shared/components/Loader/Loader';\n\nimport { getLoadingStatus } from 'redux/contacts/contacts-selectors';\n\nconst MyContacts = () => {\n  const loadingStatus = useSelector(getLoadingStatus);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <MyContactsForm />\n      <h2>Contacts</h2>\n      <MyContactsFilter />\n      {loadingStatus && <Loader />}\n      <MyContactList />\n    </div>\n  );\n};\n\nexport default MyContacts;\n","import MyContacts from 'modules/MyContacts/MyContacts';\n\nconst MyContactsPage = () => {\n  return (\n    <div>\n      <MyContacts />\n    </div>\n  );\n};\n\nexport default MyContactsPage;\n"],"names":["name","number","getAllContacts","contacts","items","getFilteredContacts","filter","normalizedFilter","toLowerCase","contact","includes","getLoadingStatus","loading","useState","initialState","state","setState","allContacts","useSelector","dispatch","useDispatch","handleChange","target","newValue","value","prevState","onSubmit","e","preventDefault","normalaizedName","find","alert","addContact","handleAddContact","className","css","htmlFor","onChange","type","pattern","title","required","placeholder","id","onClick","deleteContact","handleDeleteContact","filteredContacts","useEffect","fetchContacts","isContacts","Boolean","length","map","getFilter","setFilter","LoadingWrap","styled","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","loadingStatus"],"sourceRoot":""}